<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.softel</groupId>
	<artifactId>springboot</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>springboot</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.9.RELEASE</version>
		<relativePath/>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<quartz.version>2.3.0</quartz.version>
		<docker.image.prefix>springboot</docker.image.prefix>
	</properties>

	<dependencies>
		<!-- 核心模块，包括自动配置支持、日志和YAML -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<!-- 测试模块，包括JUnit、Hamcrest、Mockito -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- 引入Web模块 -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		   	<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<dependency>
  			<groupId>org.springframework.boot</groupId>
  			<artifactId>spring-boot-starter-tomcat</artifactId>
  			<!-- 打包时注释掉 -->
  			<scope>provided</scope>
		</dependency>
		
		<!-- SpringSecurity依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        
		<!-- 热部署 -->
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-devtools</artifactId>
	        <optional>true</optional>
	   	</dependency>
	   	
	   	<!-- mysql -->
	   	<dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        
        <!-- jpa -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        
        <!-- common -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		
		<!-- lombok(省略getter/setter方法) -->
		<dependency>
        	<groupId>org.projectlombok</groupId>
        	<artifactId>lombok</artifactId>
        </dependency>
    	
    	<!--jsr 303-->
       	<dependency>
           	<groupId>javax.validation</groupId>
           	<artifactId>validation-api</artifactId>
        </dependency>

       	<!-- hibernate validator-->
       	<dependency>
           	<groupId>org.hibernate</groupId>
           	<artifactId>hibernate-validator</artifactId>
        </dependency>
       	
       	<!-- mail依赖 -->
       	<dependency> 
	    	<groupId>org.springframework.boot</groupId>
	    	<artifactId>spring-boot-starter-mail</artifactId>
		</dependency> 
       	
       	<!-- html视图支持 -->
        <dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-thymeleaf</artifactId>
    	</dependency>
    	
    	<!-- freemarker 模版 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>
    	
    	<!-- 添加缓存支持 -->
    	<dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-cache</artifactId>
    	</dependency>
    	
    	<!-- 添加redis缓存支持 -->
    	<dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-data-redis</artifactId>
    	</dependency>
    	
    	<!--Gson-->    
        <dependency>    
            <groupId>com.google.code.gson</groupId>    
            <artifactId>gson</artifactId>    
        </dependency>
        
        <dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-configuration-processor</artifactId>
        	<optional>true</optional>
        </dependency>
        
        <!-- websocket -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        
        <!--quartz相关依赖-->
        <dependency>
        	<groupId>org.quartz-scheduler</groupId>
        	<artifactId>quartz</artifactId>
        	<version>${quartz.version}</version>
        </dependency>
        
        <dependency>
        	<groupId>org.quartz-scheduler</groupId>
        	<artifactId>quartz-jobs</artifactId>
        	<version>${quartz.version}</version>
        </dependency>
        
        <!--定时任务需要依赖context模块-->
        <dependency>
        	<groupId>org.springframework</groupId>
        	<artifactId>spring-context-support</artifactId>
        </dependency>
        
        <!-- 密码 -->
        <dependency>
	  		<groupId>org.bouncycastle</groupId>
	  		<artifactId>bcprov-jdk16</artifactId>
	  		<version>1.46</version>
  		</dependency>
  		
  		<!-- swagger -->
  		<dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.6.1</version>
        </dependency>
        
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>1.5.13</version>
        </dependency>
        
        <dependency>
		   <groupId>net.sf.dozer</groupId>
		   <artifactId>dozer</artifactId>
		   <version>5.5.1</version>
		</dependency>
        
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
                	<fork>true</fork>
            	</configuration>
			</plugin>
			
			<plugin>
    			<groupId>org.apache.maven.plugins</groupId>
    			<artifactId>maven-war-plugin</artifactId>
    			<configuration>
        			<warName>springboot</warName>
    			</configuration>
    		</plugin>
    		
    		<!-- Docker maven plugin -->
	        <plugin>
	            <groupId>com.spotify</groupId>
	            <artifactId>docker-maven-plugin</artifactId>
	            <version>1.0.0</version>
	            <configuration>
	                <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
	                <dockerDirectory>src/main/docker</dockerDirectory>
	                <resources>
	                    <resource>
	                        <targetPath>/</targetPath>
	                        <directory>${project.build.directory}</directory>
	                        <include>${project.build.finalName}.jar</include>
	                    </resource>
	                </resources>
	            </configuration>
	        </plugin>
	        <!-- Docker maven plugin -->
    		
		</plugins>
	</build>
</project>
